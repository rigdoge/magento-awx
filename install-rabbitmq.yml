---
- name: 安装 RabbitMQ 3.13
  hosts: all
  gather_facts: no
  vars:
    use_namespace: "{{ namespace | default('default') }}"
    use_nodeport: "{{ nodeport | default('30672') }}"
  tasks:
    - name: 创建 RabbitMQ 配置
      copy:
        dest: /tmp/rabbitmq.yaml
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: rabbitmq
            namespace: {{ use_namespace }}
            labels:
              app: rabbitmq
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: rabbitmq
            template:
              metadata:
                labels:
                  app: rabbitmq
              spec:
                containers:
                - name: rabbitmq
                  image: rabbitmq:3.13-management
                  ports:
                  - containerPort: 5672
                    name: amqp
                  - containerPort: 15672
                    name: management
                  env:
                  - name: RABBITMQ_NODENAME
                    value: "rabbit@localhost"
                  - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
                    value: "-rabbit tcp_listeners [{\"0.0.0.0\", 5672}] -rabbit loopback_users []"
                  readinessProbe:
                    tcpSocket:
                      port: 5672
                    initialDelaySeconds: 10
                    periodSeconds: 5
                    timeoutSeconds: 3
                  livenessProbe:
                    tcpSocket:
                      port: 5672
                    initialDelaySeconds: 30
                    periodSeconds: 10
                    timeoutSeconds: 3
                  volumeMounts:
                  - name: rabbitmq-data
                    mountPath: /var/lib/rabbitmq
                volumes:
                - name: rabbitmq-data
                  emptyDir: {}
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: rabbitmq
            namespace: {{ use_namespace }}
            labels:
              app: rabbitmq
          spec:
            type: NodePort
            ports:
            - port: 5672
              targetPort: 5672
              nodePort: {{ use_nodeport }}
              name: amqp
            - port: 15672
              targetPort: 15672
              nodePort: {{ use_nodeport | int + 1 }}
              name: management
            selector:
              app: rabbitmq

    - name: 清理旧的部署
      shell: |
        echo "=== 清理旧的部署 ==="
        /usr/local/bin/k3s kubectl delete -f /tmp/rabbitmq.yaml || true
        echo "等待资源清理完成..."
        sleep 5
      register: cleanup_result

    - name: 应用 RabbitMQ 配置
      shell: |
        echo "=== 开始部署 RabbitMQ ==="
        /usr/local/bin/k3s kubectl apply -f /tmp/rabbitmq.yaml
      register: apply_result

    - name: 等待 Pod 创建
      shell: |
        for i in $(seq 1 30); do
          echo "检查 Pod 创建进度... $i/30"
          if /usr/local/bin/k3s kubectl get pods -n {{ use_namespace }} -l app=rabbitmq 2>/dev/null | grep -q rabbitmq; then
            echo "Pod 已创建"
            exit 0
          fi
          sleep 2
        done
        echo "错误: Pod 未能成功创建"
        exit 1
      register: pod_creation_result

    - name: 等待 Pod 就绪
      shell: |
        for i in $(seq 1 60); do
          echo "检查 Pod 状态... $i/60"
          STATUS=$(/usr/local/bin/k3s kubectl get pods -n {{ use_namespace }} -l app=rabbitmq -o jsonpath='{.items[0].status.phase}')
          if [ "$STATUS" = "Running" ]; then
            READY=$(/usr/local/bin/k3s kubectl get pods -n {{ use_namespace }} -l app=rabbitmq -o jsonpath='{.items[0].status.containerStatuses[0].ready}')
            if [ "$READY" = "true" ]; then
              echo "Pod 已就绪"
              exit 0
            fi
          fi
          echo "当前状态: $STATUS"
          /usr/local/bin/k3s kubectl describe pods -n {{ use_namespace }} -l app=rabbitmq
          sleep 2
        done
        echo "错误: Pod 未能在预期时间内就绪"
        exit 1
      register: pod_ready_result

    - name: 显示部署状态
      shell: |
        echo -e "\n=== RabbitMQ 部署状态 ==="
        echo "Pod 状态:"
        /usr/local/bin/k3s kubectl get pods -n {{ use_namespace }} -l app=rabbitmq -o wide
        
        echo -e "\nService 状态:"
        /usr/local/bin/k3s kubectl get svc -n {{ use_namespace }} -l app=rabbitmq
        
        echo -e "\n=== 访问地址 ==="
        NODE_IP=$(/usr/local/bin/k3s kubectl get nodes -o jsonpath='{.items[0].status.addresses[0].address}')
        echo "AMQP 地址: amqp://$NODE_IP:{{ use_nodeport }}"
        echo "管理界面: http://$NODE_IP:{{ use_nodeport | int + 1 }}"
        echo "默认用户名/密码: guest/guest"
      register: status_result

    - name: 显示部署结果
      debug:
        msg: 
          - "{{ apply_result.stdout_lines | default([]) }}"
          - "{{ pod_creation_result.stdout_lines | default([]) }}"
          - "{{ pod_ready_result.stdout_lines | default([]) }}"
          - "{{ status_result.stdout_lines | default([]) }}" 