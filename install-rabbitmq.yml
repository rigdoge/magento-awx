---
- name: 安装 RabbitMQ 3.13
  hosts: all
  gather_facts: no
  vars:
    default_namespace: default
    default_nodeport: "30672"
  tasks:
    - name: 设置变量
      set_fact:
        use_namespace: "{{ namespace | default(default_namespace) }}"
        use_nodeport: "{{ nodeport | default(default_nodeport) }}"

    - name: 创建 RabbitMQ 配置
      copy:
        dest: /tmp/rabbitmq.yaml
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: rabbitmq
            namespace: {{ use_namespace }}
            labels:
              app: rabbitmq
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: rabbitmq
            template:
              metadata:
                labels:
                  app: rabbitmq
              spec:
                containers:
                - name: rabbitmq
                  image: rabbitmq:3.13-management
                  ports:
                  - containerPort: 5672
                    name: amqp
                  - containerPort: 15672
                    name: management
                  resources:
                    requests:
                      memory: "512Mi"
                      cpu: "500m"
                    limits:
                      memory: "1Gi"
                      cpu: "1000m"
                  readinessProbe:
                    tcpSocket:
                      port: 5672
                    initialDelaySeconds: 30
                    periodSeconds: 10
                  volumeMounts:
                  - name: rabbitmq-data
                    mountPath: /var/lib/rabbitmq
                volumes:
                - name: rabbitmq-data
                  hostPath:
                    path: /data/rabbitmq
                    type: DirectoryOrCreate
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: rabbitmq
            namespace: {{ use_namespace }}
            labels:
              app: rabbitmq
          spec:
            type: NodePort
            ports:
            - port: 5672
              targetPort: 5672
              nodePort: {{ use_nodeport }}
              name: amqp
            - port: 15672
              targetPort: 15672
              nodePort: {{ use_nodeport | int + 1 }}
              name: management
            selector:
              app: rabbitmq

    - name: 清理旧的部署
      shell: |
        echo "=== 清理旧的部署 ==="
        /usr/local/bin/k3s kubectl delete -f /tmp/rabbitmq.yaml || true
        echo "等待资源清理完成..."
        sleep 5
      register: cleanup_result

    - name: 部署 RabbitMQ
      shell: |
        echo "=== 开始部署 RabbitMQ ==="
        /usr/local/bin/k3s kubectl apply -f /tmp/rabbitmq.yaml
        
        echo "=== 等待 RabbitMQ Pod 就绪 ==="
        MAX_RETRIES=60
        RETRY_COUNT=0
        while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
          RETRY_COUNT=$((RETRY_COUNT + 1))
          
          POD_STATUS=$(/usr/local/bin/k3s kubectl get pods -n {{ use_namespace }} -l app=rabbitmq -o jsonpath='{.items[0].status.phase}' 2>/dev/null || echo "NotFound")
          if [ "$POD_STATUS" = "Running" ]; then
            echo "RabbitMQ Pod 已就绪"
            break
          fi
          
          echo "等待中... $RETRY_COUNT/$MAX_RETRIES"
          echo "当前状态: $POD_STATUS"
          /usr/local/bin/k3s kubectl get pods -n {{ use_namespace }} -l app=rabbitmq
          sleep 5
        done
        
        if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
          echo "错误: RabbitMQ Pod 未能在预期时间内就绪"
          exit 1
        fi
        
        echo -e "\n=== RabbitMQ 部署状态 ==="
        echo "Pod 状态:"
        /usr/local/bin/k3s kubectl get pods -n {{ use_namespace }} -l app=rabbitmq -o wide
        
        echo -e "\nPod 详细信息:"
        /usr/local/bin/k3s kubectl describe pods -n {{ use_namespace }} -l app=rabbitmq
        
        echo -e "\nService 状态:"
        /usr/local/bin/k3s kubectl get svc -n {{ use_namespace }} -l app=rabbitmq
        
        echo -e "\n=== 访问地址 ==="
        NODE_IP=$(/usr/local/bin/k3s kubectl get nodes -o jsonpath='{.items[0].status.addresses[0].address}')
        echo "AMQP 地址: amqp://$NODE_IP:{{ use_nodeport }}"
        echo "管理界面: http://$NODE_IP:{{ use_nodeport | int + 1 }}"
        echo "默认用户名/密码: guest/guest"
      register: deploy_result

    - name: 显示部署结果
      debug:
        msg: "{{ deploy_result.stdout_lines }}" 