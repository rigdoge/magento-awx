---
- name: 修复环境问题
  hosts: all
  tasks:
    - name: 更新软件包缓存
      apt:
        update_cache: yes
      changed_when: false

    - name: 安装基础软件包
      apt:
        name:
          - wget
          - net-tools
          - sudo
          - curl
          - apt-transport-https
          - gnupg2
        state: present

    - name: 检查 K3s 是否安装
      stat:
        path: /usr/local/bin/k3s
      register: k3s_binary

    - name: 下载 K3s 安装脚本
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: '0700'
      when: not k3s_binary.stat.exists

    - name: 安装 K3s
      shell: |
        INSTALL_K3S_EXEC="--disable traefik" /tmp/k3s-install.sh
      when: not k3s_binary.stat.exists
      register: k3s_install
      
    - name: 等待 K3s 启动
      wait_for:
        path: /etc/rancher/k3s/k3s.yaml
        state: present
        timeout: 60
      when: k3s_install.changed

    - name: 确保 kubectl 配置目录存在
      file:
        path: ~/.kube
        state: directory
        mode: '0700'

    - name: 复制 kubectl 配置
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ~/.kube/config
        remote_src: yes
        mode: '0600'

    - name: 等待节点就绪
      shell: kubectl wait --for=condition=ready node --all --timeout=60s
      changed_when: false
      register: node_ready
      until: node_ready.rc == 0
      retries: 10
      delay: 6
      when: k3s_install.changed

    - name: 检查 K3s 状态
      shell: |
        echo "=== K3s 版本 ==="
        k3s --version
        echo "=== 节点状态 ==="
        kubectl get nodes -o wide
        echo "=== 系统 Pod 状态 ==="
        kubectl get pods -A
      register: k3s_status
      changed_when: false

    - name: 显示 K3s 状态
      debug:
        msg: "{{ k3s_status.stdout_lines }}"

    - name: 生成修复报告
      copy:
        content: |
          环境修复报告
          时间: {{ ansible_date_time.iso8601 }}
          
          1. 软件包安装状态
          - wget: {{ 'wget' in ansible_facts.packages }}
          - sudo: {{ 'sudo' in ansible_facts.packages }}
          - net-tools: {{ 'net-tools' in ansible_facts.packages }}
          - curl: {{ 'curl' in ansible_facts.packages }}
          
          2. K3s 安装状态
          {{ k3s_status.stdout }}
          
          3. 下一步操作
          - 验证 K3s 集群是否正常运行
          - 检查默认存储类是否已创建
          - 准备安装 Nginx Ingress Controller
        dest: /tmp/fix_report.txt
        mode: '0644'

    - name: 显示报告位置
      debug:
        msg: "修复报告已生成：/tmp/fix_report.txt" 