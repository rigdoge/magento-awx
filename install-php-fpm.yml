---
- name: 安装 PHP-FPM 8.3
  hosts: all
  gather_facts: no
  
  pre_tasks:
    - name: 验证必要参数
      fail:
        msg: "必须指定 namespace 参数"
      when: namespace is not defined or namespace == ''

    - name: 安装依赖
      pip:
        name: 
          - kubernetes
          - openshift
        state: present
      
  tasks:
    - name: 创建命名空间
      k8s:
        api_version: v1
        kind: Namespace
        name: "{{ namespace }}"
        state: present
        
    - name: 部署 PHP-FPM
      k8s:
        state: present
        namespace: "{{ namespace }}"
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: php-fpm
            labels:
              app: php-fpm
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: php-fpm
            template:
              metadata:
                labels:
                  app: php-fpm
              spec:
                containers:
                - name: php-fpm
                  image: php:8.3-fpm
                  ports:
                  - containerPort: 9000
                    name: fpm
                  lifecycle:
                    postStart:
                      exec:
                        command:
                        - /bin/sh
                        - -c
                        - |
                          # 安装基础依赖
                          apt-get update && apt-get install -y \
                            libfreetype6-dev \
                            libjpeg62-turbo-dev \
                            libpng-dev \
                            libicu-dev \
                            libxml2-dev \
                            libxslt1-dev \
                            libzip-dev \
                            libonig-dev \
                            libsodium-dev \
                            libcurl4-openssl-dev \
                            && rm -rf /var/lib/apt/lists/*

                          # 配置并安装 GD
                          docker-php-ext-configure gd --with-freetype --with-jpeg
                          
                          # 安装 PHP 扩展
                          docker-php-ext-install -j$(nproc) \
                            bcmath \
                            ctype \
                            curl \
                            dom \
                            fileinfo \
                            filter \
                            gd \
                            hash \
                            iconv \
                            intl \
                            mbstring \
                            pdo_mysql \
                            simplexml \
                            soap \
                            sockets \
                            sodium \
                            tokenizer \
                            xml \
                            xmlwriter \
                            xsl \
                            zip
                          
                          # 配置 OPcache
                          docker-php-ext-enable opcache
                          echo "opcache.enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
                          echo "opcache.enable_cli=1" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
                          echo "opcache.memory_consumption=128" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
                          echo "opcache.interned_strings_buffer=8" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
                          echo "opcache.max_accelerated_files=4000" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
                          echo "opcache.revalidate_freq=60" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
                          echo "opcache.fast_shutdown=1" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
                  readinessProbe:
                    tcpSocket:
                      port: 9000
                    initialDelaySeconds: 180
                    periodSeconds: 10
                    timeoutSeconds: 10
                    failureThreshold: 3
                  livenessProbe:
                    tcpSocket:
                      port: 9000
                    initialDelaySeconds: 240
                    periodSeconds: 20
                    timeoutSeconds: 10
                    failureThreshold: 3
                  resources:
                    requests:
                      memory: "512Mi"
                      cpu: "500m"
                    limits:
                      memory: "1Gi"
                      cpu: "1000m"
                      
    - name: 创建 PHP-FPM 服务
      k8s:
        state: present
        namespace: "{{ namespace }}"
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: php-fpm
            labels:
              app: php-fpm
          spec:
            type: NodePort
            ports:
            - port: 9000
              targetPort: 9000
              nodePort: "{{ nodeport | default(30900) }}"
              name: fpm
            selector:
              app: php-fpm
              
    - name: 等待 Pod 就绪
      k8s_info:
        kind: Pod
        namespace: "{{ namespace }}"
        label_selectors:
          - app=php-fpm
      register: pod_status
      until: pod_status.resources | length > 0 and pod_status.resources[0].status.phase == "Running"
      retries: 30
      delay: 10
      
    - name: 显示部署状态
      debug:
        msg:
          - "命名空间: {{ namespace }}"
          - "Pod 状态: {{ pod_status.resources[0].status.phase }}"
          - "访问地址: tcp://{{ ansible_host }}:{{ nodeport | default(30900) }}" 