---
- name: 检查 Percona 版本
  hosts: all
  gather_facts: no
  tasks:
    - name: 检查 Pod 状态
      shell: |
        echo "=== Percona Pod 状态 ==="
        /usr/local/bin/k3s kubectl get pods -l app=percona
        
        # 检查 Pod 是否存在
        POD_COUNT=$(/usr/local/bin/k3s kubectl get pods -l app=percona -o name | wc -l)
        if [ "$POD_COUNT" -eq "0" ]; then
          echo "错误: Percona Pod 不存在，请先运行安装脚本"
          exit 1
        fi
        
        # 检查 Pod 状态
        echo -e "\n=== Pod 详细状态 ==="
        /usr/local/bin/k3s kubectl describe pod -l app=percona
        
        # 检查容器状态
        echo -e "\n=== 容器日志 ==="
        POD_NAME=$(/usr/local/bin/k3s kubectl get pods -l app=percona -o jsonpath='{.items[0].metadata.name}')
        /usr/local/bin/k3s kubectl logs $POD_NAME
        
        # 等待容器就绪
        echo -e "\n等待容器就绪..."
        /usr/local/bin/k3s kubectl wait --for=condition=ready pod -l app=percona --timeout=60s
      register: pod_status
      ignore_errors: yes

    - name: 获取版本信息
      shell: |
        POD_NAME=$(/usr/local/bin/k3s kubectl get pods -l app=percona -o jsonpath='{.items[0].metadata.name}')
        
        echo -e "\n=== Percona 版本信息 ==="
        echo "MySQL 命令版本:"
        /usr/local/bin/k3s kubectl exec $POD_NAME -- mysql -V || echo "无法获取 MySQL 命令版本"
        
        echo -e "\nMySQL 服务器版本:"
        /usr/local/bin/k3s kubectl exec $POD_NAME -- mysql -uroot -proot123 -e "SELECT VERSION();" || echo "无法获取服务器版本"
        
        echo -e "\n=== 详细版本信息 ==="
        /usr/local/bin/k3s kubectl exec $POD_NAME -- mysql -uroot -proot123 -e "SHOW VARIABLES LIKE '%version%';" || echo "无法获取详细版本信息"
      register: version_info
      when: pod_status is success

    - name: 显示版本信息
      debug:
        msg: "{{ version_info.stdout_lines | default([]) }}"
      when: version_info is defined and version_info.stdout_lines is defined 