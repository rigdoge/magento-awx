---
- name: 还原 AWX 配置
  hosts: KS-1
  gather_facts: yes
  vars:
    backup_dir: "/backup/awx"
    restore_file: "{{ backup_file | default('') }}"  # 通过 -e backup_file=xxx 指定要还原的文件
    temp_dir: "/tmp/awx-restore"
    pg_container: "awx_postgres"
    pg_database: "awx"
  
  tasks:
    - name: 检查还原文件参数
      fail:
        msg: "请通过 -e backup_file=awx-backup-YYYY-MM-DD.tar.gz 指定要还原的备份文件"
      when: restore_file == ''

    - name: 检查还原文件是否存在
      stat:
        path: "{{ backup_dir }}/{{ restore_file }}"
      register: backup_stat
      become: yes

    - name: 验证还原文件存在
      fail:
        msg: "备份文件 {{ backup_dir }}/{{ restore_file }} 不存在"
      when: not backup_stat.stat.exists

    - name: 创建临时目录
      file:
        path: "{{ temp_dir }}"
        state: directory
        mode: '0755'
      become: yes

    - name: 解压备份文件
      unarchive:
        src: "{{ backup_dir }}/{{ restore_file }}"
        dest: "{{ temp_dir }}"
        remote_src: yes
      become: yes

    - name: 获取解压后的目录名
      shell: "ls {{ temp_dir }}"
      register: extracted_dir
      become: yes

    - name: 停止 AWX 服务
      shell: |
        k3s kubectl scale deployment -n awx awx-web --replicas=0
        k3s kubectl scale deployment -n awx awx-task --replicas=0
      become: yes

    - name: 等待 AWX Pod 停止
      shell: |
        k3s kubectl wait --for=delete pod -l app=awx-web -n awx --timeout=60s
        k3s kubectl wait --for=delete pod -l app=awx-task -n awx --timeout=60s
      become: yes

    - name: 还原 PostgreSQL 配置文件
      shell: |
        k3s kubectl cp {{ temp_dir }}/{{ extracted_dir.stdout }}/postgresql.conf awx/{{ pg_container }}:/var/lib/postgresql/data/
        k3s kubectl cp {{ temp_dir }}/{{ extracted_dir.stdout }}/pg_hba.conf awx/{{ pg_container }}:/var/lib/postgresql/data/
      become: yes

    - name: 还原数据库
      shell: |
        k3s kubectl exec -n awx {{ pg_container }} -- psql -U awx -d postgres -c "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = '{{ pg_database }}' AND pid <> pg_backend_pid();"
        k3s kubectl exec -n awx {{ pg_container }} -- dropdb -U awx {{ pg_database }}
        k3s kubectl exec -n awx {{ pg_container }} -- createdb -U awx {{ pg_database }}
        k3s kubectl exec -n awx {{ pg_container }} -- psql -U awx -d {{ pg_database }} -f /tmp/awx_db.sql
      become: yes

    - name: 重启 PostgreSQL Pod
      shell: |
        k3s kubectl delete pod -n awx {{ pg_container }}
      become: yes

    - name: 等待 PostgreSQL Pod 就绪
      shell: |
        k3s kubectl wait --for=condition=ready pod -l app=postgresql -n awx --timeout=60s
      become: yes

    - name: 启动 AWX 服务
      shell: |
        k3s kubectl scale deployment -n awx awx-web --replicas=1
        k3s kubectl scale deployment -n awx awx-task --replicas=1
      become: yes

    - name: 等待 AWX Pod 就绪
      shell: |
        k3s kubectl wait --for=condition=ready pod -l app=awx-web -n awx --timeout=120s
        k3s kubectl wait --for=condition=ready pod -l app=awx-task -n awx --timeout=120s
      become: yes

    - name: 清理临时文件
      file:
        path: "{{ temp_dir }}"
        state: absent
      become: yes 