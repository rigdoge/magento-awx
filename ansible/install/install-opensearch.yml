---
- name: 安装 OpenSearch 2.12.0
  hosts: all
  gather_facts: no
  vars:
    default_namespace: default
    default_nodeport: "30920"
  tasks:
    - name: 设置变量
      set_fact:
        use_namespace: "{{ namespace if namespace is defined else default_namespace }}"
        use_nodeport: "{{ nodeport if nodeport is defined else default_nodeport }}"

    - name: 创建 OpenSearch 配置
      copy:
        dest: /tmp/opensearch.yaml
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: opensearch
            namespace: {{ use_namespace }}
            labels:
              app: opensearch
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: opensearch
            template:
              metadata:
                labels:
                  app: opensearch
              spec:
                securityContext:
                  fsGroup: 1000
                  runAsUser: 1000
                  runAsGroup: 1000
                initContainers:
                - name: volume-permissions
                  image: busybox
                  command: ["sh", "-c", "chown -R 1000:1000 /usr/share/opensearch/data && chmod -R 0770 /usr/share/opensearch/data"]
                  volumeMounts:
                  - name: opensearch-data
                    mountPath: /usr/share/opensearch/data
                  securityContext:
                    runAsUser: 0
                containers:
                - name: opensearch
                  image: opensearchproject/opensearch:2.12.0
                  ports:
                  - containerPort: 9200
                    name: http
                  - containerPort: 9300
                    name: transport
                  - containerPort: 9600
                    name: metrics
                  env:
                  - name: discovery.type
                    value: single-node
                  - name: DISABLE_SECURITY_PLUGIN
                    value: "true"
                  - name: DISABLE_INSTALL_DEMO_CONFIG
                    value: "true"
                  - name: OPENSEARCH_JAVA_OPTS
                    value: "-Xms1g -Xmx1g"
                  - name: node.name
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  resources:
                    requests:
                      memory: "2Gi"
                      cpu: "1000m"
                    limits:
                      memory: "4Gi"
                      cpu: "2000m"
                  readinessProbe:
                    httpGet:
                      path: /_cluster/health
                      port: 9200
                    initialDelaySeconds: 60
                    periodSeconds: 20
                    timeoutSeconds: 5
                  livenessProbe:
                    httpGet:
                      path: /_cluster/health
                      port: 9200
                    initialDelaySeconds: 120
                    periodSeconds: 30
                    timeoutSeconds: 5
                  volumeMounts:
                  - name: opensearch-data
                    mountPath: /usr/share/opensearch/data
                volumes:
                - name: opensearch-data
                  hostPath:
                    path: /data/opensearch
                    type: DirectoryOrCreate
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: opensearch
            namespace: {{ use_namespace }}
            labels:
              app: opensearch
          spec:
            type: NodePort
            ports:
            - port: 9200
              targetPort: 9200
              nodePort: {{ use_nodeport }}
              name: http
            - port: 9300
              targetPort: 9300
              name: transport
            - port: 9600
              targetPort: 9600
              name: metrics
            selector:
              app: opensearch

    - name: 清理旧的部署
      shell: |
        kubectl delete -f /tmp/opensearch.yaml || true
        sleep 5
      register: cleanup_result

    - name: 部署 OpenSearch
      shell: |
        echo "=== 开始部署 OpenSearch ==="
        echo "部署到命名空间: {{ use_namespace }}"
        kubectl apply -f /tmp/opensearch.yaml
        
        echo "等待 Pod 创建..."
        for i in $(seq 1 30); do
          echo "检查 Pod 创建进度... $i/30"
          POD_NAME=$(kubectl get pods -n {{ use_namespace }} -l app=opensearch -o jsonpath='{.items[0].metadata.name}')
          if [ -z "$POD_NAME" ]; then
            echo "Pod 名称为空，继续等待..."
            sleep 5
            continue
          fi
          
          echo "Pod 名称: $POD_NAME"
          STATUS=$(kubectl get pod -n {{ use_namespace }} $POD_NAME -o jsonpath='{.status.phase}')
          echo "Pod 状态: $STATUS"
          
          if [ "$STATUS" = "Running" ]; then
            echo "Pod 已创建并运行"
            break
          fi
          
          echo "=== Pod 详细状态 ==="
          kubectl get pod -n {{ use_namespace }} $POD_NAME -o yaml | grep -A 10 "status:"
          
          echo "=== Pod 事件 ==="
          kubectl get events -n {{ use_namespace }} --field-selector involvedObject.name=$POD_NAME --sort-by='.lastTimestamp'
          
          echo "=== Pod 详细信息 ==="
          kubectl describe pod -n {{ use_namespace }} $POD_NAME
          
          echo "=== Pod 日志 ==="
          kubectl logs -n {{ use_namespace }} $POD_NAME || true
          
          sleep 10
        done
        
        echo -e "\n=== OpenSearch 部署状态 ==="
        echo "Pod 状态:"
        kubectl get pods -n {{ use_namespace }} -l app=opensearch -o wide
        
        echo -e "\nService 状态:"
        kubectl get svc -n {{ use_namespace }} -l app=opensearch
        
        echo -e "\n=== 访问地址 ==="
        NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[0].address}')
        echo "http://$NODE_IP:{{ use_nodeport }}"
      register: deploy_result

    - name: 显示部署结果
      debug:
        msg: "{{ deploy_result.stdout_lines }}" 