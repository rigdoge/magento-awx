---
- name: 安装 ModSecurity 基础环境
  hosts: all
  gather_facts: no
  become: yes
  
  tasks:
    - name: 清理旧安装
      shell: |
        set -x
        echo "=== 清理旧安装 ==="
        
        # 停止 Nginx
        systemctl stop nginx || true
        
        # 删除旧文件
        rm -rf /etc/nginx/modules-enabled/modsecurity.conf
        rm -rf /etc/nginx/modsecurity
        
        # 清理包
        apt-get remove -y libmodsecurity3 modsecurity-crs || true
        apt-get autoremove -y
      register: clean_result
      
    - name: 显示清理结果
      debug:
        msg: "{{ clean_result.stdout_lines }}"

    - name: 安装基础包
      shell: |
        set -x
        echo "=== 安装基础包 ==="
        
        # 更新包管理器
        apt-get update
        
        # 添加 nginx 仓库
        apt-get install -y curl gnupg2 ca-certificates lsb-release
        echo "deb http://nginx.org/packages/ubuntu $(lsb_release -cs) nginx" > /etc/apt/sources.list.d/nginx.list
        curl -fsSL https://nginx.org/keys/nginx_signing.key | apt-key add -
        
        # 添加 ModSecurity 仓库
        apt-get install -y software-properties-common
        add-apt-repository -y ppa:ondrej/nginx-mainline
        
        # 再次更新并安装
        apt-get update
        apt-get install -y \
          nginx \
          libmodsecurity3 \
          libmodsecurity-dev \
          nginx-module-modsecurity || true
        
        # 创建配置目录
        mkdir -p /etc/nginx/modsecurity
        
        # 下载默认配置
        curl -fsSL https://raw.githubusercontent.com/SpiderLabs/ModSecurity/v3/master/modsecurity.conf-recommended > /etc/nginx/modsecurity/modsecurity.conf
      register: install_result
      
    - name: 显示安装结果
      debug:
        msg: "{{ install_result.stdout_lines }}"

    - name: 配置 ModSecurity
      shell: |
        set -x
        echo "=== 配置 ModSecurity ==="
        
        # 修改基础配置
        sed -i 's/SecRuleEngine DetectionOnly/SecRuleEngine On/' /etc/nginx/modsecurity/modsecurity.conf
        
        # 创建主配置文件
        cat > /etc/nginx/modules-enabled/modsecurity.conf << 'EOF'
        modsecurity on;
        modsecurity_rules_file /etc/nginx/modsecurity/modsecurity.conf;
        EOF
        
        # 创建基础规则
        cat > /etc/nginx/modsecurity/basic-rules.conf << 'EOF'
        # 基础安全规则
        SecRule REQUEST_HEADERS:Content-Type "text/xml" \
          "id:1,phase:1,t:none,deny,status:403,msg:'XML content type not allowed'"
        
        SecRule REQUEST_FILENAME "\\.(exe|dll|so)$" \
          "id:2,phase:1,t:none,deny,status:403,msg:'Executable files not allowed'"
        EOF
      register: config_result
      
    - name: 显示配置结果
      debug:
        msg: "{{ config_result.stdout_lines }}"

    - name: 重启 Nginx
      shell: |
        set -x
        echo "=== 重启 Nginx ==="
        
        # 测试配置
        nginx -t
        
        # 重启服务
        systemctl restart nginx
        
        # 检查状态
        systemctl status nginx
      register: restart_result
      
    - name: 显示重启结果
      debug:
        msg: "{{ restart_result.stdout_lines }}" 