---
- name: 安装 PHP-FPM 扩展
  hosts: all
  gather_facts: no
  vars:
    use_namespace: "{{ namespace }}"
    max_retries: "{{ retries | default('3') }}"
    init_delay: "{{ delay | default('30') }}"

  tasks:
    - name: 获取 PHP-FPM Pod 名称
      shell: |
        set -x  # 启用调试模式
        set -e  # 遇到错误就退出
        
        for i in $(seq 1 {{ max_retries }}); do
          POD_NAME=$(kubectl get pods -n {{ use_namespace }} -l app=php-fpm -o jsonpath='{.items[0].metadata.name}' || true)
          
          if [ ! -z "$POD_NAME" ]; then
            # 只输出 Pod 名称
            printf "%s" "$POD_NAME"
            exit 0
          fi
          
          if [ $i -eq {{ max_retries }} ]; then
            echo "未找到 PHP-FPM Pod" >&2
            exit 1
          fi
          
          sleep {{ init_delay }}
        done
      register: pod_name

    - name: 检查 Pod 状态
      shell: |
        set -x  # 启用调试模式
        set -e  # 遇到错误就退出
        
        POD_NAME="{{ pod_name.stdout }}"
        
        for i in $(seq 1 {{ max_retries }}); do
          # 检查 Pod 状态
          STATUS=$(kubectl get pod -n {{ use_namespace }} "$POD_NAME" -o jsonpath='{.status.phase}' 2>/dev/null || echo "NotFound")
          echo "Pod 状态: $STATUS"
          
          if [ "$STATUS" = "Running" ]; then
            echo "Pod 运行正常"
            kubectl describe pod -n {{ use_namespace }} "$POD_NAME"
            exit 0
          fi
          
          if [ $i -eq {{ max_retries }} ]; then
            echo "Pod 未处于运行状态"
            kubectl describe pod -n {{ use_namespace }} "$POD_NAME"
            exit 1
          fi
          
          echo "Pod 未就绪，等待下一次检查..."
          sleep {{ init_delay }}
        done

    - name: 显示 Pod 状态
      debug:
        msg: "{{ pod_name.stdout }}"

    - name: 更新包管理器
      shell: |
        set -x  # 启用调试模式
        POD_NAME="{{ pod_name.stdout }}"
        echo "=== 更新包管理器 ==="
        
        # 切换到 root 用户并执行命令
        kubectl exec -n {{ use_namespace }} $POD_NAME -- bash << 'EOF'
        set -x  # 启用调试模式
        set -e  # 遇到错误就退出
        
        # 检查当前用户
        echo "当前用户:"
        whoami
        
        # 检查 sources.list
        echo "检查 sources.list:"
        cat /etc/apt/sources.list || echo "sources.list 不存在"
        
        # 创建 sources.list
        echo "创建 sources.list..."
        echo "deb http://deb.debian.org/debian bullseye main" > /etc/apt/sources.list
        echo "deb http://security.debian.org/debian-security bullseye-security main" >> /etc/apt/sources.list
        echo "deb http://deb.debian.org/debian bullseye-updates main" >> /etc/apt/sources.list
        
        # 创建必要的目录
        echo "创建必要的目录..."
        mkdir -p /var/lib/apt/lists/partial
        
        # 设置目录权限
        echo "设置目录权限..."
        chown -R root:root /var/lib/apt/lists
        
        # 更新包管理器
        echo "执行更新..."
        apt-get clean
        apt-get update -y
        EOF
      register: update_result

    - name: 显示更新结果
      debug:
        msg: "{{ update_result.stdout_lines }}"

    - name: 安装系统依赖
      shell: |
        set -x  # 启用调试模式
        POD_NAME="{{ pod_name.stdout }}"
        echo "=== 安装系统依赖 ==="
        
        # 切换到 root 用户并执行命令
        kubectl exec -n {{ use_namespace }} $POD_NAME -- bash << 'EOF'
        set -x  # 启用调试模式
        set -e  # 遇到错误就退出
        
        # 检查当前用户
        echo "当前用户:"
        whoami
        
        # 安装所有必需的系统依赖
        echo "安装依赖..."
        apt-get install -y \
          libicu-dev \
          libzip-dev \
          libpng-dev \
          libjpeg-dev \
          libfreetype6-dev \
          libxml2-dev \
          libxslt1-dev \
          libmagickwand-dev \
          libwebp-dev \
          pkg-config

        # 验证安装
        echo "验证系统依赖安装..."
        dpkg -l | grep -E "libicu|libzip|libpng|libjpeg|libfreetype|libxml2|libxslt|libmagick|libwebp|pkg-config"
        EOF
      register: deps_result

    - name: 显示依赖安装结果
      debug:
        msg: "{{ deps_result.stdout_lines }}"

    - name: 安装 PHP 扩展
      shell: |
        set -x  # 启用调试模式
        POD_NAME="{{ pod_name.stdout }}"
        echo "=== 安装 PHP 扩展 ==="
        
        # 切换到 root 用户并执行命令
        kubectl exec -n {{ use_namespace }} $POD_NAME -- bash << 'EOF'
        set -x  # 启用调试模式
        set -e  # 遇到错误就退出
        
        # 检查当前用户
        echo "当前用户:"
        whoami
        
        # 添加 PHP 8.3 仓库
        echo "添加 PHP 仓库..."
        curl -sSL https://packages.sury.org/php/apt.gpg -o /etc/apt/trusted.gpg.d/php.gpg
        echo "deb https://packages.sury.org/php/ bullseye main" > /etc/apt/sources.list.d/php.list
        apt-get update -y
        
        # 安装 PHP 8.3 及其扩展
        echo "安装 PHP 8.3 及扩展..."
        apt install -y \
          php8.3-common=8.3.16-1 \
          php8.3-cli=8.3.16-1 \
          php8.3-fpm=8.3.16-1 \
          php8.3-opcache=8.3.16-1 \
          php8.3-gd=8.3.16-1 \
          php8.3-mysql=8.3.16-1 \
          php8.3-curl=8.3.16-1 \
          php8.3-intl=8.3.16-1 \
          php8.3-xsl=8.3.16-1 \
          php8.3-mbstring=8.3.16-1 \
          php8.3-zip=8.3.16-1 \
          php8.3-bcmath=8.3.16-1 \
          php8.3-soap=8.3.16-1 \
          php8.3-fileinfo=8.3.16-1 \
          php8.3-imagick=8.3.16-1 \
          php8.3-redis=8.3.16-1
        
        # 验证安装
        echo "验证 PHP 版本和扩展..."
        php -v
        php -m
        
        # 检查 PHP-FPM 配置
        echo "检查 PHP-FPM 配置..."
        php-fpm8.3 -v
        ls -la /etc/php/8.3/fpm/
        EOF
      register: ext_result

    - name: 显示扩展安装结果
      debug:
        msg: "{{ ext_result.stdout_lines }}"

    - name: 检查扩展安装结果
      debug:
        msg: "PHP 扩展安装成功"
      when: ext_result.rc == 0

    - name: 验证安装
      shell: |
        set -x  # 启用调试模式
        POD_NAME="{{ pod_name.stdout }}"
        echo "=== 验证安装 ==="
        
        # 检查 PHP CLI
        echo "PHP CLI 版本和扩展:"
        kubectl exec -n {{ use_namespace }} $POD_NAME -- php -v
        kubectl exec -n {{ use_namespace }} $POD_NAME -- php -m
        
        # 检查 PHP-FPM
        echo "PHP-FPM 版本和配置:"
        kubectl exec -n {{ use_namespace }} $POD_NAME -- php-fpm8.3 -v
        
        # 检查扩展配置目录
        echo "PHP 配置目录:"
        kubectl exec -n {{ use_namespace }} $POD_NAME -- bash -c 'ls -la /etc/php/8.3/cli/conf.d/'
        kubectl exec -n {{ use_namespace }} $POD_NAME -- bash -c 'ls -la /etc/php/8.3/fpm/conf.d/'
        
        # 检查特定扩展是否安装
        echo "检查关键扩展:"
        for ext in mysql gd redis opcache intl soap zip bcmath; do
          echo "检查 $ext 扩展..."
          kubectl exec -n {{ use_namespace }} $POD_NAME -- bash -c "php -r \"echo extension_loaded('$ext') ? '$ext: 已启用\n' : '$ext: 未启用\n';\""
        done
        
        # 检查 PHP 配置信息
        echo "PHP 配置信息:"
        kubectl exec -n {{ use_namespace }} $POD_NAME -- php --ini
      register: verify_result

    - name: 显示验证结果
      debug:
        msg: "{{ verify_result.stdout_lines }}"

    - name: 重启 PHP-FPM 服务
      shell: |
        set -x  # 启用调试模式
        POD_NAME="{{ pod_name.stdout }}"
        echo "=== 重启 PHP-FPM 服务 ==="
        
        kubectl exec -n {{ use_namespace }} $POD_NAME -- bash -c 'service php8.3-fpm restart || systemctl restart php8.3-fpm || kill -USR2 $(cat /var/run/php-fpm.pid)'
      register: restart_result

    - name: 显示重启结果
      debug:
        msg: "{{ restart_result.stdout_lines }}" 