---
- name: 配置 cert-manager
  hosts: all
  gather_facts: no
  tasks:
    - name: 创建 staging ClusterIssuer
      copy:
        dest: /tmp/staging-issuer.yaml
        content: |
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-staging
          spec:
            acme:
              server: https://acme-staging-v02.api.letsencrypt.org/directory
              email: admin@example.com  # 替换为你的邮箱
              privateKeySecretRef:
                name: letsencrypt-staging
              solvers:
              - http01:
                  ingress:
                    class: nginx

    - name: 创建 production ClusterIssuer
      copy:
        dest: /tmp/prod-issuer.yaml
        content: |
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-prod
          spec:
            acme:
              server: https://acme-v02.api.letsencrypt.org/directory
              email: admin@example.com  # 替换为你的邮箱
              privateKeySecretRef:
                name: letsencrypt-prod
              solvers:
              - http01:
                  ingress:
                    class: nginx

    - name: 应用 ClusterIssuer 配置
      shell: |
        kubectl apply -f /tmp/staging-issuer.yaml
        kubectl apply -f /tmp/prod-issuer.yaml
      register: issuer_result

    - name: 等待 ClusterIssuer 就绪
      shell: |
        echo "等待 staging issuer 就绪..."
        kubectl wait --for=condition=ready clusterissuer/letsencrypt-staging --timeout=60s
        echo "等待 production issuer 就绪..."
        kubectl wait --for=condition=ready clusterissuer/letsencrypt-prod --timeout=60s
      register: wait_result

    - name: 检查 ClusterIssuer 状态
      shell: |
        echo "=== Staging Issuer 状态 ==="
        kubectl describe clusterissuer letsencrypt-staging
        echo -e "\n=== Production Issuer 状态 ==="
        kubectl describe clusterissuer letsencrypt-prod
      register: status_result

    - name: 显示配置结果
      debug:
        msg: 
          - "Issuer 创建结果: {{ issuer_result.stdout_lines | default([]) }}"
          - "等待结果: {{ wait_result.stdout_lines | default([]) }}"
          - "状态检查: {{ status_result.stdout_lines | default([]) }}"
