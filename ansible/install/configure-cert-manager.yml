---
- name: 配置 cert-manager 证书
  hosts: all
  gather_facts: yes
  vars:
    domain_name: awx.tschenfeng.com
    email_address: ssl@tschenfeng.com
    cluster_issuer_name: letsencrypt-prod
    staging: true   # 使用 Let's Encrypt 测试环境，避免触发生产环境速率限制

  tasks:
    - name: 检查和配置 K3s kubeconfig
      shell: |
        echo "检查 K3s kubeconfig..."
        if [ -f /etc/rancher/k3s/k3s.yaml ]; then
          echo "找到 K3s kubeconfig"
          mkdir -p ~/.kube
          cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
          chmod 600 ~/.kube/config
          echo "已复制 kubeconfig 到 ~/.kube/config"
        else
          echo "未找到 K3s kubeconfig"
          exit 1
        fi
        
        echo "测试 kubectl 连接..."
        kubectl cluster-info
      register: kube_check
      become: yes

    - name: 显示 kubeconfig 检查结果
      debug:
        var: kube_check.stdout_lines

    - name: 创建 ClusterIssuer
      copy:
        dest: /tmp/cluster-issuer.yaml
        content: |
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: {{ cluster_issuer_name }}
          spec:
            acme:
              server: {% if staging %}https://acme-staging-v02.api.letsencrypt.org/directory{% else %}https://acme-v02.api.letsencrypt.org/directory{% endif %}

              email: {{ email_address }}
              privateKeySecretRef:
                name: {{ cluster_issuer_name }}
              solvers:
              - http01:
                  ingress:
                    class: nginx

    - name: 应用 ClusterIssuer
      shell: kubectl apply -f /tmp/cluster-issuer.yaml

    - name: 配置 AWX Ingress
      copy:
        dest: /tmp/awx-ingress.yaml
        content: |
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: awx-ingress
            namespace: awx
            annotations:
              cert-manager.io/cluster-issuer: {{ cluster_issuer_name }}
              kubernetes.io/ingress.class: nginx
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              nginx.ingress.kubernetes.io/proxy-body-size: "64m"
              nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
              nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
          spec:
            tls:
            - hosts:
              - {{ domain_name }}
              secretName: awx-tls
            rules:
            - host: {{ domain_name }}
              http:
                paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: awx-service
                      port:
                        number: 80

    - name: 应用 AWX Ingress
      shell: kubectl apply -f /tmp/awx-ingress.yaml

    - name: 等待证书就绪
      shell: |
        kubectl wait --for=condition=ready certificate awx-tls -n awx --timeout=300s
      register: cert_wait_result
      until: cert_wait_result.rc == 0
      retries: 30
      delay: 10

    - name: 验证证书状态
      shell: |
        echo "=== 证书状态检查 ==="
        echo "检查证书状态..."
        kubectl get certificate awx-tls -n awx -o wide
        
        echo "检查证书请求状态..."
        kubectl get certificaterequest -n awx -o wide
        
        echo "检查 ACME orders..."
        kubectl get order -n awx -o wide
        
        echo "检查 ACME challenges..."
        kubectl get challenge -n awx -o wide
        
        echo "检查证书 Secret..."
        kubectl get secret awx-tls -n awx -o jsonpath='{.metadata.annotations}' | grep cert-manager
      register: cert_status
      
    - name: 显示证书状态
      debug:
        msg: "{{ cert_status.stdout_lines }}"

    - name: 显示配置完成信息
      debug:
        msg: |
          证书配置已完成！
          域名: {{ domain_name }}
          ClusterIssuer: {{ cluster_issuer_name }}
          证书名称: awx-tls
          命名空间: awx 