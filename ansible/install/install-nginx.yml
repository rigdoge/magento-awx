---
- name: 安装 Nginx 1.24
  hosts: all
  gather_facts: no
  vars:
    use_namespace: "{{ namespace | default('default') }}"
    use_nodeport: "{{ nodeport | default('30180') }}"
  tasks:
    - name: 创建命名空间
      shell: |
        if [ "{{ use_namespace }}" != "default" ]; then
          echo "=== 创建命名空间 {{ use_namespace }} ==="
          /usr/local/bin/k3s kubectl create namespace {{ use_namespace }} || true
        fi
      register: namespace_result

    - name: 创建 Nginx 配置
      copy:
        dest: /tmp/nginx.yaml
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx
            namespace: {{ use_namespace }}
            labels:
              app: nginx
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: nginx
            template:
              metadata:
                labels:
                  app: nginx
              spec:
                containers:
                - name: nginx
                  image: nginx:1.24
                  ports:
                  - containerPort: 80
                  readinessProbe:
                    httpGet:
                      path: /
                      port: 80
                    initialDelaySeconds: 5
                    periodSeconds: 5
                    timeoutSeconds: 3
                  livenessProbe:
                    httpGet:
                      path: /
                      port: 80
                    initialDelaySeconds: 15
                    periodSeconds: 10
                    timeoutSeconds: 3
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: nginx
            namespace: {{ use_namespace }}
            labels:
              app: nginx
          spec:
            type: NodePort
            ports:
            - port: 80
              targetPort: 80
              nodePort: {{ use_nodeport }}
            selector:
              app: nginx

    - name: 清理旧的部署
      shell: |
        echo "=== 清理旧的部署 ==="
        /usr/local/bin/k3s kubectl delete -f /tmp/nginx.yaml || true
        echo "等待资源清理完成..."
        sleep 5
      register: cleanup_result

    - name: 应用 Nginx 配置
      shell: |
        echo "=== 开始部署 Nginx ==="
        /usr/local/bin/k3s kubectl apply -f /tmp/nginx.yaml
      register: apply_result

    - name: 等待 Pod 创建
      shell: |
        for i in $(seq 1 30); do
          echo "检查 Pod 创建进度... $i/30"
          if /usr/local/bin/k3s kubectl get pods -n {{ use_namespace }} -l app=nginx 2>/dev/null | grep -q nginx; then
            echo "Pod 已创建"
            exit 0
          fi
          sleep 2
        done
        echo "错误: Pod 未能成功创建"
        exit 1
      register: pod_creation_result

    - name: 等待 Pod 就绪
      shell: |
        for i in $(seq 1 60); do
          echo "检查 Pod 状态... $i/60"
          STATUS=$(/usr/local/bin/k3s kubectl get pods -n {{ use_namespace }} -l app=nginx -o jsonpath='{.items[0].status.phase}')
          if [ "$STATUS" = "Running" ]; then
            READY=$(/usr/local/bin/k3s kubectl get pods -n {{ use_namespace }} -l app=nginx -o jsonpath='{.items[0].status.containerStatuses[0].ready}')
            if [ "$READY" = "true" ]; then
              echo "Pod 已就绪"
              exit 0
            fi
          fi
          echo "当前状态: $STATUS"
          /usr/local/bin/k3s kubectl describe pods -n {{ use_namespace }} -l app=nginx
          sleep 2
        done
        echo "错误: Pod 未能在预期时间内就绪"
        exit 1
      register: pod_ready_result

    - name: 显示部署状态
      shell: |
        echo -e "\n=== Nginx 部署状态 ==="
        echo "Pod 状态:"
        /usr/local/bin/k3s kubectl get pods -n {{ use_namespace }} -l app=nginx -o wide
        
        echo -e "\nService 状态:"
        /usr/local/bin/k3s kubectl get svc -n {{ use_namespace }} -l app=nginx
        
        echo -e "\n=== 访问地址 ==="
        NODE_IP=$(/usr/local/bin/k3s kubectl get nodes -o jsonpath='{.items[0].status.addresses[0].address}')
        echo "http://$NODE_IP:{{ use_nodeport }}"
      register: status_result

    - name: 显示部署结果
      debug:
        msg: 
          - "{{ namespace_result.stdout_lines | default([]) }}"
          - "{{ apply_result.stdout_lines | default([]) }}"
          - "{{ pod_creation_result.stdout_lines | default([]) }}"
          - "{{ pod_ready_result.stdout_lines | default([]) }}"
          - "{{ status_result.stdout_lines | default([]) }}" 