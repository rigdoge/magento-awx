---
- name: 在 K3s 中安装 Nginx 1.24
  hosts: all
  gather_facts: no
  tasks:
    - name: 创建 Nginx 配置
      copy:
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx
          spec:
            selector:
              matchLabels:
                app: nginx
            replicas: 1
            template:
              metadata:
                labels:
                  app: nginx
              spec:
                containers:
                - name: nginx
                  image: nginx:1.24
                  ports:
                  - containerPort: 80
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: nginx
          spec:
            type: NodePort
            ports:
            - port: 80
              targetPort: 80
            selector:
              app: nginx
        dest: /tmp/nginx.yaml

    - name: 部署 Nginx
      shell: kubectl apply -f /tmp/nginx.yaml
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: 等待 Nginx 就绪
      shell: |
        for i in {1..30}; do
          if kubectl get pods -l app=nginx | grep Running; then
            echo "Nginx 已就绪"
            exit 0
          fi
          echo "等待 Nginx 就绪... $i"
          sleep 2
        done
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: wait_result
      ignore_errors: yes

    - name: 获取 Nginx 访问信息
      shell: |
        echo "=== Nginx Pod 状态 ==="
        kubectl get pods -l app=nginx
        
        echo -e "\n=== Nginx Service 状态 ==="
        kubectl get svc nginx
        
        echo -e "\n=== Nginx 访问地址 ==="
        NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[0].address}')
        NODE_PORT=$(kubectl get svc nginx -o jsonpath='{.spec.ports[0].nodePort}')
        echo "http://$NODE_IP:$NODE_PORT"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: nginx_status
      ignore_errors: yes

    - name: 显示 Nginx 状态
      debug:
        msg: "{{ nginx_status.stdout_lines | default([]) }}"