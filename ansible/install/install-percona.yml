---
- name: 安装 Percona Server 8.0
  hosts: all
  gather_facts: no
  tasks:
    - name: 创建命名空间
      shell: |
        /usr/local/bin/k3s kubectl create namespace {{ namespace }} || true
      register: namespace_result

    - name: 创建 Percona 配置
      copy:
        dest: /tmp/percona.yaml
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: percona
            namespace: {{ namespace }}
            labels:
              app: percona
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: percona
            template:
              metadata:
                labels:
                  app: percona
              spec:
                containers:
                - name: percona
                  image: percona:8.0
                  ports:
                  - containerPort: 3306
                  env:
                  - name: MYSQL_ROOT_PASSWORD
                    value: "magento123"
                  resources:
                    requests:
                      memory: "1Gi"
                      cpu: "500m"
                    limits:
                      memory: "2Gi"
                      cpu: "1000m"
                  volumeMounts:
                  - name: mysql-persistent-storage
                    mountPath: /var/lib/mysql
                volumes:
                - name: mysql-persistent-storage
                  hostPath:
                    path: /data/percona
                    type: DirectoryOrCreate
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: percona
            namespace: {{ namespace }}
            labels:
              app: percona
          spec:
            type: NodePort
            ports:
            - port: 3306
              targetPort: 3306
              nodePort: 30306
            selector:
              app: percona

    - name: 清理旧部署
      shell: |
        /usr/local/bin/k3s kubectl delete -f /tmp/percona.yaml || true
        sleep 5
      register: cleanup_result

    - name: 部署 Percona
      shell: |
        echo "=== 开始部署 Percona ==="
        kubectl apply -f /tmp/percona.yaml
        
        echo "等待 Percona Pod 就绪..."
        for i in $(seq 1 30); do
          echo "等待中... $i/30"
          POD_NAME=$(kubectl get pods -n {{ use_namespace }} -l app=percona -o jsonpath='{.items[0].metadata.name}')
          if [ -z "$POD_NAME" ]; then
            echo "Pod 名称为空，继续等待..."
            sleep 5
            continue
          fi
          
          echo "Pod 名称: $POD_NAME"
          STATUS=$(kubectl get pod -n {{ use_namespace }} $POD_NAME -o jsonpath='{.status.phase}')
          echo "Pod 状态: $STATUS"
          
          echo "=== Pod 详细状态 ==="
          kubectl get pod -n {{ use_namespace }} $POD_NAME -o yaml | grep -A 10 "status:"
          
          echo "=== Pod 事件 ==="
          kubectl get events -n {{ use_namespace }} --field-selector involvedObject.name=$POD_NAME --sort-by='.lastTimestamp'
          
          echo "=== Pod 详细信息 ==="
          kubectl describe pod -n {{ use_namespace }} $POD_NAME
          
          echo "=== Pod 日志 ==="
          kubectl logs -n {{ use_namespace }} $POD_NAME --previous || true
          kubectl logs -n {{ use_namespace }} $POD_NAME || true
          
          sleep 10
        done
        
        echo -e "\n=== Percona 部署状态 ==="
        echo "Pod 状态:"
        kubectl get pods -n {{ use_namespace }} -l app=percona
        
        echo -e "\nService 状态:"
        kubectl get svc -n {{ use_namespace }} -l app=percona
      register: deploy_result

    - name: 显示部署结果
      debug:
        msg: "{{ deploy_result.stdout_lines }}" 