---
- name: 安装 fail2ban
  hosts: all
  gather_facts: no
  become: yes  # 使用 sudo 权限
  
  tasks:
    - name: 清理旧安装
      shell: |
        set -x
        echo "=== 清理旧安装 ==="
        
        # 停止并禁用服务
        systemctl stop fail2ban || true
        systemctl disable fail2ban || true
        
        # 删除旧文件
        rm -rf /etc/fail2ban
        rm -f /usr/bin/fail2ban*
        
        # 清理包
        apt-get remove -y fail2ban || true
        apt-get purge -y fail2ban || true
        apt-get autoremove -y
      register: clean_result

    - name: 显示清理结果
      debug:
        msg: "{{ clean_result.stdout_lines }}"

    - name: 安装依赖
      shell: |
        set -x
        echo "=== 安装依赖 ==="
        
        # 修复包管理器
        apt-get update || true
        apt-get install -f || true
        
        # 安装基础 Python
        apt-get install -y python3 || true
        
        # 安装其他依赖
        apt-get install -y \
          python3-pip \
          python3-setuptools \
          python3-distutils \
          python3-pkg-resources || true
        
        # 再次更新
        apt-get update
        apt-get upgrade -y
      register: deps_result

    - name: 显示依赖安装结果
      debug:
        msg: "{{ deps_result.stdout_lines }}"

    - name: 安装 fail2ban
      shell: |
        set -x
        echo "=== 安装 fail2ban ==="
        
        # 安装 fail2ban
        apt-get install -y fail2ban
      register: install_result

    - name: 显示安装结果
      debug:
        msg: "{{ install_result.stdout_lines }}"

    - name: 配置 fail2ban
      shell: |
        set -x
        echo "=== 配置 fail2ban ==="
        
        # 创建配置文件
        cat > /etc/fail2ban/jail.local << 'EOF'
        [DEFAULT]
        # 封禁时间（秒）
        bantime = 3600
        
        # 检测时间范围（秒）
        findtime = 600
        
        # 允许失败次数
        maxretry = 5
        
        # 忽略的 IP
        ignoreip = 127.0.0.1/8
        
        # 动作
        banaction = iptables-multiport
        
        [sshd]
        enabled = true
        port = ssh
        filter = sshd
        logpath = /var/log/auth.log
        
        [nginx-http-auth]
        enabled = true
        filter = nginx-http-auth
        port = http,https
        logpath = /var/log/nginx/error.log
        EOF
      register: config_result

    - name: 显示配置结果
      debug:
        msg: "{{ config_result.stdout_lines }}"

    - name: 启动服务
      shell: |
        set -x
        echo "=== 启动服务 ==="
        
        # 重启服务
        systemctl daemon-reload
        systemctl enable fail2ban
        systemctl restart fail2ban
        
        # 等待服务启动
        sleep 5
        
        # 检查状态
        systemctl status fail2ban
      register: start_result

    - name: 显示启动结果
      debug:
        msg: "{{ start_result.stdout_lines }}" 