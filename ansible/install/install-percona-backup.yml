---
- name: 安装 Percona XtraBackup
  hosts: all
  gather_facts: no
  vars:
    use_namespace: "{{ namespace | default('magento') }}"
    backup_size: "{{ size | default('50Gi') }}"
    retention_days: "{{ retention | default('7') }}"
    full_backup_schedule: "{{ full_schedule | default('0 0 * * *') }}"  # 默认每天凌晨
    inc_backup_schedule: "{{ inc_schedule | default('0 */4 * * *') }}"  # 默认每4小时
    backup_image: "percona/percona-xtrabackup:8.0"
    k3s_bin: "/usr/local/bin/k3s"
    mysql_root_password: "{{ lookup('env', 'MYSQL_ROOT_PASSWORD') | default('magento123', true) }}"
    
  tasks:
    - name: 显示变量
      debug:
        msg: 
          - "命名空间: {{ use_namespace }}"
          - "使用的密码: {{ mysql_root_password }}"

    - name: 创建临时 Secret 文件
      copy:
        dest: "/tmp/secret.yaml"
        mode: '0600'
        content: |
          apiVersion: v1
          kind: Secret
          metadata:
            name: percona
            namespace: {{ use_namespace }}
          type: Opaque
          stringData:
            root-password: {{ mysql_root_password }}

    - name: 应用 Secret
      command: "{{ k3s_bin }} kubectl apply -f /tmp/secret.yaml"
      register: secret_result

    - name: 显示 Secret 创建结果
      debug:
        var: secret_result.stdout_lines

    - name: 验证 Secret
      command: "{{ k3s_bin }} kubectl get secret percona -n {{ use_namespace }} -o yaml"
      register: secret_check

    - name: 显示 Secret 详情
      debug:
        var: secret_check.stdout_lines

    - name: 创建临时 PVC 文件
      copy:
        dest: "/tmp/pvc.yaml"
        content: |
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: percona-backup
            namespace: {{ use_namespace }}
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: {{ backup_size }}

    - name: 应用 PVC
      command: "{{ k3s_bin }} kubectl apply -f /tmp/pvc.yaml"
      register: pvc_result

    - name: 显示 PVC 创建结果
      debug:
        var: pvc_result.stdout_lines

    - name: 创建临时 ConfigMap 文件
      copy:
        dest: "/tmp/configmap.yaml"
        content: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: backup-scripts
            namespace: {{ use_namespace }}
          data:
            backup.sh: |
              #!/bin/bash
              set -e
              
              echo "开始完整备份..."
              xtrabackup --backup --user=root --password=$MYSQL_ROOT_PASSWORD --target-dir=/backup/full
              
            incremental-backup.sh: |
              #!/bin/bash
              set -e
              
              echo "开始增量备份..."
              xtrabackup --backup --user=root --password=$MYSQL_ROOT_PASSWORD --target-dir=/backup/inc --incremental-basedir=/backup/full

    - name: 应用 ConfigMap
      command: "{{ k3s_bin }} kubectl apply -f /tmp/configmap.yaml"
      register: configmap_result

    - name: 显示 ConfigMap 创建结果
      debug:
        var: configmap_result.stdout_lines

    - name: 创建临时完整备份 CronJob 文件
      copy:
        dest: "/tmp/full-backup-cronjob.yaml"
        content: |
          apiVersion: batch/v1
          kind: CronJob
          metadata:
            name: percona-full-backup
            namespace: {{ use_namespace }}
          spec:
            schedule: "{{ full_backup_schedule }}"
            successfulJobsHistoryLimit: 3
            failedJobsHistoryLimit: 3
            jobTemplate:
              spec:
                template:
                  spec:
                    containers:
                      - name: xtrabackup
                        image: {{ backup_image }}
                        command: ["/bin/bash", "/scripts/backup.sh"]
                        securityContext:
                          runAsUser: 999
                          runAsGroup: 999
                        env:
                          - name: MYSQL_ROOT_PASSWORD
                            valueFrom:
                              secretKeyRef:
                                name: percona
                                key: root-password
                          - name: MYSQL_PWD
                            valueFrom:
                              secretKeyRef:
                                name: percona
                                key: root-password
                        envFrom:
                          - secretRef:
                              name: percona
                        volumeMounts:
                          - name: backup-volume
                            mountPath: /backup
                          - name: backup-scripts
                            mountPath: /scripts
                    volumes:
                      - name: backup-volume
                        persistentVolumeClaim:
                          claimName: percona-backup
                      - name: backup-scripts
                        configMap:
                          name: backup-scripts
                          defaultMode: 0755
                    restartPolicy: OnFailure

    - name: 应用完整备份 CronJob
      command: "{{ k3s_bin }} kubectl apply -f /tmp/full-backup-cronjob.yaml"
      register: full_backup_result

    - name: 显示完整备份 CronJob 创建结果
      debug:
        var: full_backup_result.stdout_lines

    - name: 创建临时增量备份 CronJob 文件
      copy:
        dest: "/tmp/inc-backup-cronjob.yaml"
        content: |
          apiVersion: batch/v1
          kind: CronJob
          metadata:
            name: percona-incremental-backup
            namespace: {{ use_namespace }}
          spec:
            schedule: "{{ inc_backup_schedule }}"
            successfulJobsHistoryLimit: 3
            failedJobsHistoryLimit: 3
            jobTemplate:
              spec:
                template:
                  spec:
                    containers:
                      - name: xtrabackup
                        image: {{ backup_image }}
                        command: ["/bin/bash", "/scripts/incremental-backup.sh"]
                        securityContext:
                          runAsUser: 999
                          runAsGroup: 999
                        env:
                          - name: MYSQL_ROOT_PASSWORD
                            valueFrom:
                              secretKeyRef:
                                name: percona
                                key: root-password
                          - name: MYSQL_PWD
                            valueFrom:
                              secretKeyRef:
                                name: percona
                                key: root-password
                        envFrom:
                          - secretRef:
                              name: percona
                        volumeMounts:
                          - name: backup-volume
                            mountPath: /backup
                          - name: backup-scripts
                            mountPath: /scripts
                    volumes:
                      - name: backup-volume
                        persistentVolumeClaim:
                          claimName: percona-backup
                      - name: backup-scripts
                        configMap:
                          name: backup-scripts
                          defaultMode: 0755
                    restartPolicy: OnFailure

    - name: 应用增量备份 CronJob
      command: "{{ k3s_bin }} kubectl apply -f /tmp/inc-backup-cronjob.yaml"
      register: inc_backup_result

    - name: 显示增量备份 CronJob 创建结果
      debug:
        var: inc_backup_result.stdout_lines

    - name: 清理临时文件
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /tmp/secret.yaml
        - /tmp/pvc.yaml
        - /tmp/configmap.yaml
        - /tmp/full-backup-cronjob.yaml
        - /tmp/inc-backup-cronjob.yaml 