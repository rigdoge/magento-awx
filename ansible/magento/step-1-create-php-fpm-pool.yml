---
- name: 创建 Magento 2 PHP-FPM Pool
  hosts: localhost
  gather_facts: false
  collections:
    - kubernetes.core
  vars:
    site_name: chen  # 站点名称，可以被外部变量覆盖
    php_fpm_namespace: magento-shared  # PHP-FPM 所在的命名空间
    k8s_connection:
      host: "{{ k8s_host }}"
      api_key: "{{ k8s_api_key }}"
      validate_certs: "{{ k8s_validate_certs | default(false) }}"
      ca_cert: "{{ k8s_ca_cert | default(omit) }}"
      proxy: "{{ k8s_proxy | default(omit) }}"
      timeout: "{{ k8s_timeout | default(30) }}"

  tasks:
    - name: 显示连接信息
      debug:
        msg: 
          - "Host: {{ k8s_host }}"
          - "Namespace: {{ php_fpm_namespace }}"
          - "Site Name: {{ site_name }}"
          - "验证证书: {{ k8s_validate_certs | default(false) }}"
          - "API Key: {{ k8s_api_key | truncate(10, True, '...', 0) if k8s_api_key is defined else '未设置' }}"

    - name: 验证 Kubernetes 连接
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ php_fpm_namespace }}"
        host: "{{ k8s_connection.host }}"
        api_key: "{{ k8s_connection.api_key }}"
        validate_certs: "{{ k8s_connection.validate_certs }}"
        ca_cert: "{{ k8s_connection.ca_cert }}"
        proxy: "{{ k8s_connection.proxy }}"
        timeout: "{{ k8s_connection.timeout }}"
        state: present
      register: namespace_info
      ignore_errors: yes

    - name: 显示命名空间信息
      debug:
        msg: 
          - "状态: {{ namespace_info.failed | default(false) }}"
          - "错误: {{ namespace_info.msg | default('无') }}"
          - "输出: {{ namespace_info.result | default({}) | to_nice_json }}"
      when: namespace_info is defined

    - name: 设置任务状态
      set_fact:
        task_failed: "{{ namespace_info.failed | default(false) }}"

    - name: 如果 Kubernetes 连接失败则退出
      fail:
        msg: |
          Kubernetes 连接失败，请检查以下信息：
          1. API 服务器地址: {{ k8s_host }}
          2. Token 是否有效: {{ k8s_api_key | truncate(10, True, '...', 0) if k8s_api_key is defined else '未设置' }}
          3. 命名空间 {{ php_fpm_namespace }} 是否存在
          4. 网络连接是否正常
          5. 证书验证设置: {{ k8s_validate_certs | default(false) }}
          
          错误信息：{{ namespace_info.msg | default('无') }}
          详细信息：{{ namespace_info | to_nice_json }}
      when: task_failed

    - name: 创建 PHP-FPM Pool ConfigMap
      kubernetes.core.k8s:
        host: "{{ k8s_connection.host }}"
        api_key: "{{ k8s_connection.api_key }}"
        validate_certs: "{{ k8s_connection.validate_certs }}"
        ca_cert: "{{ k8s_connection.ca_cert }}"
        proxy: "{{ k8s_connection.proxy }}"
        timeout: "{{ k8s_connection.timeout }}"
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: "{{ site_name }}-php-fpm-pool"
            namespace: "{{ php_fpm_namespace }}"
          data:
            pool.conf: |
              [{{ site_name }}]
              user = www-data
              group = www-data
              listen = /var/run/php-fpm/{{ site_name }}.sock
              listen.owner = www-data
              listen.group = www-data
              listen.mode = 0660
              
              ; Process Manager Configuration
              pm = dynamic
              pm.max_children = 50
              pm.start_servers = 5
              pm.min_spare_servers = 5
              pm.max_spare_servers = 35
              pm.max_requests = 500
              
              ; PHP Settings
              php_admin_value[memory_limit] = 4G
              php_admin_value[max_execution_time] = 1800
              php_admin_value[date.timezone] = UTC
              php_admin_value[error_log] = /proc/self/fd/2
              php_admin_flag[log_errors] = on
              
              ; Session Configuration
              php_value[session.save_handler] = redis
              php_value[session.save_path] = "tcp://redis:6379/1"
              
              ; Magento Specific Settings
              php_value[max_input_vars] = 10000
              php_value[post_max_size] = 64M
              php_value[upload_max_filesize] = 64M
              php_value[realpath_cache_size] = 10M
              php_value[realpath_cache_ttl] = 7200
      register: configmap_result
      ignore_errors: yes

    - name: 显示 ConfigMap 创建结果
      debug:
        msg: 
          - "状态: {{ configmap_result.failed | default(false) }}"
          - "错误: {{ configmap_result.msg | default('无') }}"
          - "输出: {{ configmap_result.result | default({}) }}"
      when: configmap_result is defined

    - name: 获取当前 PHP-FPM Deployment
      kubernetes.core.k8s_info:
        host: "{{ k8s_connection.host }}"
        api_key: "{{ k8s_connection.api_key }}"
        validate_certs: "{{ k8s_connection.validate_certs }}"
        ca_cert: "{{ k8s_connection.ca_cert }}"
        proxy: "{{ k8s_connection.proxy }}"
        timeout: "{{ k8s_connection.timeout }}"
        api_version: apps/v1
        kind: Deployment
        name: php-fpm
        namespace: "{{ php_fpm_namespace }}"
      register: current_deployment
      when: not task_failed
      ignore_errors: yes

    - name: 显示当前 Deployment 信息
      debug:
        msg: 
          - "状态: {{ current_deployment.failed | default(false) }}"
          - "错误: {{ current_deployment.msg | default('无') }}"
          - "资源: {{ current_deployment.resources | default([]) }}"
      when: current_deployment is defined

    - name: 更新 PHP-FPM Deployment 以挂载新的 Pool 配置
      kubernetes.core.k8s:
        host: "{{ k8s_connection.host }}"
        api_key: "{{ k8s_connection.api_key }}"
        validate_certs: "{{ k8s_connection.validate_certs }}"
        ca_cert: "{{ k8s_connection.ca_cert }}"
        proxy: "{{ k8s_connection.proxy }}"
        timeout: "{{ k8s_connection.timeout }}"
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: php-fpm
            namespace: "{{ php_fpm_namespace }}"
          spec:
            selector:
              matchLabels:
                app: php-fpm
            template:
              metadata:
                labels:
                  app: php-fpm
              spec:
                containers:
                - name: php-fpm
                  image: "{{ current_deployment.resources[0].spec.template.spec.containers[0].image | default('php:8.3-fpm-alpine') }}"
                  volumeMounts:
                  - name: "{{ site_name }}-pool-config"
                    mountPath: "/usr/local/etc/php-fpm.d/{{ site_name }}.conf"
                    subPath: pool.conf
                volumes:
                - name: "{{ site_name }}-pool-config"
                  configMap:
                    name: "{{ site_name }}-php-fpm-pool"
      when: not task_failed
      register: deployment_result
      ignore_errors: yes

    - name: 显示 Deployment 更新结果
      debug:
        msg: 
          - "状态: {{ deployment_result.failed | default(false) }}"
          - "错误: {{ deployment_result.msg | default('无') }}"
          - "输出: {{ deployment_result.result | default({}) }}"
      when: deployment_result is defined

    - name: 等待 PHP-FPM Pod 重启
      kubernetes.core.k8s_info:
        host: "{{ k8s_connection.host }}"
        api_key: "{{ k8s_connection.api_key }}"
        validate_certs: "{{ k8s_connection.validate_certs }}"
        ca_cert: "{{ k8s_connection.ca_cert }}"
        proxy: "{{ k8s_connection.proxy }}"
        timeout: "{{ k8s_connection.timeout }}"
        kind: Pod
        namespace: "{{ php_fpm_namespace }}"
        label_selectors:
          - app=php-fpm
        field_selectors:
          - status.phase=Running
      register: php_fpm_pod
      until: php_fpm_pod.resources | length > 0
      retries: 30
      delay: 10
      when: not task_failed and not deployment_result.failed | default(false)
      ignore_errors: yes

    - name: 显示 PHP-FPM Pod 状态
      debug:
        msg: "PHP-FPM Pool {{ site_name }} 配置{{ '失败' if task_failed else '成功' }}" 