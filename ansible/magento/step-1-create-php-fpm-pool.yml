---
- name: 创建 Magento 2 PHP-FPM Pool
  hosts: localhost
  gather_facts: false
  collections:
    - kubernetes.core
  vars:
    site_name: chen  # 站点名称，可以被外部变量覆盖
    php_fpm_namespace: magento-shared  # PHP-FPM 所在的命名空间
    k8s_auth:
      host: "{{ k8s_host }}"
      api_key: "{{ k8s_api_key }}"
      validate_certs: "{{ k8s_validate_certs | default(false) }}"

  tasks:
    - name: 显示连接信息
      debug:
        msg: 
          - "Host: {{ k8s_host }}"
          - "Namespace: {{ php_fpm_namespace }}"
          - "Site Name: {{ site_name }}"

    - name: 验证 Kubernetes 连接
      kubernetes.core.k8s_info:
        <<: "{{ k8s_auth }}"
        kind: Namespace
        name: "{{ php_fpm_namespace }}"
      register: namespace_info
      ignore_errors: yes

    - name: 显示命名空间信息
      debug:
        var: namespace_info
      when: namespace_info is defined

    - name: 如果命名空间验证失败则显示错误
      debug:
        msg: "命名空间验证失败: {{ namespace_info.msg if namespace_info.msg is defined else 'Unknown error' }}"
      when: namespace_info is failed

    - name: 创建 PHP-FPM Pool ConfigMap
      kubernetes.core.k8s:
        <<: "{{ k8s_auth }}"
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: "{{ site_name }}-php-fpm-pool"
            namespace: "{{ php_fpm_namespace }}"
          data:
            pool.conf: |
              [{{ site_name }}]
              user = www-data
              group = www-data
              listen = /var/run/php-fpm/{{ site_name }}.sock
              listen.owner = www-data
              listen.group = www-data
              listen.mode = 0660
              
              ; Process Manager Configuration
              pm = dynamic
              pm.max_children = 50
              pm.start_servers = 5
              pm.min_spare_servers = 5
              pm.max_spare_servers = 35
              pm.max_requests = 500
              
              ; PHP Settings
              php_admin_value[memory_limit] = 4G
              php_admin_value[max_execution_time] = 1800
              php_admin_value[date.timezone] = UTC
              php_admin_value[error_log] = /proc/self/fd/2
              php_admin_flag[log_errors] = on
              
              ; Session Configuration
              php_value[session.save_handler] = redis
              php_value[session.save_path] = "tcp://redis:6379/1"
              
              ; Magento Specific Settings
              php_value[max_input_vars] = 10000
              php_value[post_max_size] = 64M
              php_value[upload_max_filesize] = 64M
              php_value[realpath_cache_size] = 10M
              php_value[realpath_cache_ttl] = 7200
      register: configmap_result
      ignore_errors: yes

    - name: 显示 ConfigMap 创建结果
      debug:
        var: configmap_result
      when: configmap_result is defined

    - name: 如果失败则显示错误信息
      debug:
        msg: "创建 ConfigMap 失败: {{ configmap_result.msg if configmap_result.msg is defined else 'Unknown error' }}"
      when: configmap_result is failed

    - name: 获取当前 PHP-FPM Deployment
      kubernetes.core.k8s_info:
        <<: "{{ k8s_auth }}"
        api_version: apps/v1
        kind: Deployment
        name: php-fpm
        namespace: "{{ php_fpm_namespace }}"
      register: current_deployment
      when: configmap_result is succeeded
      ignore_errors: yes

    - name: 显示当前 Deployment 信息
      debug:
        var: current_deployment
      when: current_deployment is defined

    - name: 更新 PHP-FPM Deployment 以挂载新的 Pool 配置
      kubernetes.core.k8s:
        <<: "{{ k8s_auth }}"
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: php-fpm
            namespace: "{{ php_fpm_namespace }}"
          spec:
            selector:
              matchLabels:
                app: php-fpm
            template:
              metadata:
                labels:
                  app: php-fpm
              spec:
                containers:
                - name: php-fpm
                  image: "{{ current_deployment.resources[0].spec.template.spec.containers[0].image | default('php:8.3-fpm-alpine') }}"
                  volumeMounts:
                  - name: "{{ site_name }}-pool-config"
                    mountPath: "/usr/local/etc/php-fpm.d/{{ site_name }}.conf"
                    subPath: pool.conf
                volumes:
                - name: "{{ site_name }}-pool-config"
                  configMap:
                    name: "{{ site_name }}-php-fpm-pool"
      when: configmap_result is succeeded
      register: deployment_result
      ignore_errors: yes

    - name: 显示 Deployment 更新结果
      debug:
        var: deployment_result
      when: deployment_result is defined

    - name: 等待 PHP-FPM Pod 重启
      kubernetes.core.k8s_info:
        <<: "{{ k8s_auth }}"
        kind: Pod
        namespace: "{{ php_fpm_namespace }}"
        label_selectors:
          - app=php-fpm
        field_selectors:
          - status.phase=Running
      register: php_fpm_pod
      until: php_fpm_pod.resources | length > 0
      retries: 30
      delay: 10
      when: deployment_result is succeeded and not deployment_result.failed
      ignore_errors: yes

    - name: 显示 PHP-FPM Pod 状态
      debug:
        msg: "PHP-FPM Pool {{ site_name }} 已创建并配置"
      when: php_fpm_pod is succeeded 