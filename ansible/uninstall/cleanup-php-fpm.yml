---
- name: 清理卡住的 PHP-FPM Pod
  hosts: all
  gather_facts: no
  vars:
    use_namespace: "hawk"  # 直接使用固定的命名空间
  tasks:
    - name: 获取 k3s 路径
      shell: which k3s || echo "/usr/local/bin/k3s"
      register: k3s_path
      changed_when: false

    - name: 获取 Pod 详细信息
      shell: |
        echo "=== Pod 详细信息 ==="
        POD_NAME=$({{ k3s_path.stdout }} kubectl get pods -n {{ use_namespace }} -l app=php-fpm -o jsonpath='{.items[0].metadata.name}')
        if [ ! -z "$POD_NAME" ]; then
          echo "Pod 名称: $POD_NAME"
          {{ k3s_path.stdout }} kubectl describe pod -n {{ use_namespace }} $POD_NAME
          echo -e "\n=== Pod 日志 ==="
          {{ k3s_path.stdout }} kubectl logs -n {{ use_namespace }} $POD_NAME --previous || true
          {{ k3s_path.stdout }} kubectl logs -n {{ use_namespace }} $POD_NAME || true
        else
          echo "未找到 PHP-FPM Pod"
        fi
      register: pod_info

    - name: 显示 Pod 信息
      debug:
        msg: "{{ pod_info.stdout_lines }}"

    - name: 强制删除 PHP-FPM Pod
      shell: |
        echo "=== 开始清理 PHP-FPM Pod ==="
        # 强制删除 Pod
        {{ k3s_path.stdout }} kubectl delete pod -n {{ use_namespace }} -l app=php-fpm --force --grace-period=0 || true
        
        # 删除 Deployment
        {{ k3s_path.stdout }} kubectl delete deployment -n {{ use_namespace }} php-fpm || true
        
        # 删除 Service
        {{ k3s_path.stdout }} kubectl delete service -n {{ use_namespace }} php-fpm || true
        
        # 等待资源完全删除
        echo "等待资源清理完成..."
        sleep 5
        
        # 检查清理结果
        echo -e "\n=== 清理结果 ==="
        echo "Pod 状态:"
        {{ k3s_path.stdout }} kubectl get pods -n {{ use_namespace }} -l app=php-fpm
        
        echo -e "\nDeployment 状态:"
        {{ k3s_path.stdout }} kubectl get deployment -n {{ use_namespace }} php-fpm
        
        echo -e "\nService 状态:"
        {{ k3s_path.stdout }} kubectl get service -n {{ use_namespace }} php-fpm
      register: cleanup_result

    - name: 显示清理结果
      debug:
        msg: "{{ cleanup_result.stdout_lines }}" 